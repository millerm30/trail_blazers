---
import MainLayout from "@layout/MainLayout.astro";
import "@styles/styles.css";
import BusinessCard from "@components/BusinessCard.astro";
import SocialIcon from "@components/SocialIcon.astro";
import RoundDaBayInnImage from "@assets/business_logos/rounddabayinn.jpg";
import BrookSideImage from "@assets/business_logos/brookside.jpg";
import CedarShakeImage from "@assets/business_logos/cedarshake.jpg";
import princehavenImage from "@assets/business_logos/princehavenCamp.jpg";
import hillSideCamp from "@assets/business_logos/hillsideCamp.jpg";
import philpottsLandingImage from "@assets/business_logos/philpottsanding.jpg";
import Amenities from "@components/CardActivities.astro";
import heroImage from "@assets/hero_images/view2.jpg";
import type { Activity, Social, Business, ImageMap } from "../types";
import { supabase } from "../lib/supabase";
import { socialIconMap } from "@utils/ImageFunctions";

const { data, error } = await supabase
  .from("businesses")
  .select("*")
  .filter("type", "eq", "lodging").returns<Business[]>();

if (error) {
  console.log("Error fetching data from Supabase", error);
}

const imageMap: ImageMap = {
  "Round Da Bay Inn": RoundDaBayInnImage,
  "Beautiful Brookside Cottage": BrookSideImage,
  "The Cedar Shake": CedarShakeImage,
  "Princehaven Campground": princehavenImage,
  "Hillside Campground": hillSideCamp,
  "Philpott's Landing": philpottsLandingImage,
};
---

<MainLayout title={"Plate Cove - Lodging"} backgroundImage={heroImage}>
  <main>
    <section class="flex flex-wrap justify-center mt-10 gap-4">
      {
        data ? (
          data.map((business) => (
            <BusinessCard
              businessImage={imageMap[business.name]}
              businessName={business.name}
              businessDescription={business.description}
              businessAddress={business.address}
              businessPhone={business.phone}
              businessEmail={business.email}
              businessWebsite={business.website}
              businessWebName={business.webName}
            >
              {business.amenities?.map((activity: Activity) => (
                <Amenities slot="before_social" activity={activity} />
              ))}
              {business.socialIcons?.map((social: Social) => (
                <SocialIcon
                  socialHref={social.socialHref}
                  socialType={socialIconMap[social.socialType]}
                />
              ))}
            </BusinessCard>
          ))
        ) : (
          <p>No Business found.</p>
        )
      }
    </section>
  </main>
</MainLayout>
